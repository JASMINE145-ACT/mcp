'use strict';var index_js=require('@modelcontextprotocol/sdk/server/index.js'),stdio_js=require('@modelcontextprotocol/sdk/server/stdio.js'),types_js=require('@modelcontextprotocol/sdk/types.js'),zodToJsonSchema=require('zod-to-json-schema'),zod=require('zod'),promises$1=require('timers/promises'),promises=require('fs/promises'),events=require('events'),q=require('fuse.js'),B=require('uri-templates');function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var q__default=/*#__PURE__*/_interopDefault(q);var B__default=/*#__PURE__*/_interopDefault(B);var ne=async p=>{let t;if("url"in p){let r=await fetch(p.url);if(!r.ok)throw new Error(`Failed to fetch image from URL: ${r.statusText}`);t=Buffer.from(await r.arrayBuffer());}else if("path"in p)t=await promises.readFile(p.path);else if("buffer"in p)t=p.buffer;else throw new Error("Invalid input: Provide a valid 'url', 'path', or 'buffer'");let{fileTypeFromBuffer:e}=await import('file-type'),s=await e(t);return {type:"image",data:t.toString("base64"),mimeType:s?.mime??"image/png"}},T=class extends Error{constructor(t){super(t),this.name=new.target.name;}},l=class extends T{extras;constructor(t,e){super(t),this.name=new.target.name,this.extras=e;}},R=class extends l{},O=zod.z.object({type:zod.z.literal("text"),text:zod.z.string()}).strict(),U=zod.z.object({type:zod.z.literal("image"),data:zod.z.string().base64(),mimeType:zod.z.string()}).strict(),N=zod.z.discriminatedUnion("type",[O,U]),y=zod.z.object({content:N.array(),isError:zod.z.boolean().optional()}).strict(),P=zod.z.object({values:zod.z.array(zod.z.string()).max(100),total:zod.z.optional(zod.z.number().int()),hasMore:zod.z.optional(zod.z.boolean())}),D=events.EventEmitter,v=class extends D{},f=class extends v{#t={};#r;#o="info";#i=[];#p=[];#s=[];#n=[];#e;#l;#a=null;#m=null;constructor({auth:t,name:e,version:s,tools:n,resources:r,resourcesTemplates:o,prompts:i}){if(super(),this.#l=t,n.length&&(this.#t.tools={}),(r.length||o.length)&&(this.#t.resources={}),i.length){for(let m of i)this.addPrompt(m);this.#t.prompts={};}if(this.#t.logging={},this.#e=new index_js.Server({name:e,version:s},{capabilities:this.#t}),this.setupErrorHandling(),this.setupLoggingHandlers(),this.setupRootsHandlers(),this.setupCompleteHandlers(),n.length&&this.setupToolHandlers(n),r.length||o.length){for(let m of r)this.addResource(m);if(this.setupResourceHandlers(r),o.length){for(let m of o)this.addResourceTemplate(m);this.setupResourceTemplateHandlers(o);}}i.length&&this.setupPromptHandlers(i);}addResource(t){this.#p.push(t);}addResourceTemplate(t){let e={};for(let n of t.arguments??[])n.complete&&(e[n.name]=n.complete);let s={...t,complete:async(n,r)=>e[n]?await e[n](r):{values:[]}};this.#s.push(s);}addPrompt(t){let e={},s={};for(let r of t.arguments??[])r.complete&&(e[r.name]=r.complete),r.enum&&(s[r.name]=r.enum);let n={...t,complete:async(r,o)=>{if(e[r])return await e[r](o);if(s[r]){let m=new q__default.default(s[r],{keys:["value"]}).search(o);return {values:m.map(u=>u.item),total:m.length}}return {values:[]}}};this.#i.push(n);}get clientCapabilities(){return this.#r??null}get server(){return this.#e}setupErrorHandling(){this.#e.onerror=t=>{console.error("[MCP Error]",t);};}setupPingWithBackoff(){let t=1e3,e=3e4,s=0,n=async()=>{try{await this.#e.ping(),t=1e3,s=0;}catch(r){s++;let o=r instanceof Error&&(r.message.includes("timeout")||r.code===-32001);r instanceof Error&&r.code===-32601?console.warn("[MCP Ping] Method not found during ping - this is usually not critical"):o?(console.warn(`[MCP Ping] Timeout detected (attempt ${s}), applying backoff`),t=Math.min(t*1.5,e)):(console.error("[MCP Ping] Error during ping:",r),this.emit("error",{error:r}));}this.#m=setTimeout(n,t);};this.#m=setTimeout(n,t);}async requestSampling(t){return this.#e.createMessage(t)}async connect(t){if(this.#e.transport)throw new l("Server is already connected");try{await this.#e.connect(t);let e=0;for(;e++<10;){try{let s=await this.#e.getClientCapabilities();if(s){this.#r=s;break}}catch(s){e>=10&&console.warn("[warning] Failed to get client capabilities",s);}await promises$1.setTimeout(100);}if(this.#r||console.warn("[warning] MCP could not infer client capabilities"),this.#r?.roots)try{let s=await this.#e.listRoots();this.#n=s.roots;}catch(s){console.warn("[warning] Failed to list roots",s);}this.#a&&(clearInterval(this.#a),this.#a=null),this.setupPingWithBackoff();}catch(e){throw console.error("[error] Failed to connect to MCP server",e),e}}get roots(){return this.#n}async close(){this.#a&&(clearInterval(this.#a),this.#a=null),this.#m&&(clearTimeout(this.#m),this.#m=null);try{await this.#e.close();}catch(t){console.error("[MCP Error]","could not close server",t);}}get loggingLevel(){return this.#o}setupCompleteHandlers(){this.#e.setRequestHandler(types_js.CompleteRequestSchema,async t=>{if(t.params.ref.type==="ref/prompt"){let e=this.#i.find(n=>n.name===t.params.ref.name);if(!e)throw new l("Unknown prompt",{request:t});if(!e.complete)throw new l("Prompt does not support completion",{request:t});return {completion:P.parse(await e.complete(t.params.argument.name,t.params.argument.value))}}if(t.params.ref.type==="ref/resource"){let e=this.#s.find(n=>n.uriTemplate===t.params.ref.uri);if(!e)throw new l("Unknown resource",{request:t});if(!("uriTemplate"in e))throw new l("Unexpected resource");if(!e.complete)throw new l("Resource does not support completion",{request:t});return {completion:P.parse(await e.complete(t.params.argument.name,t.params.argument.value))}}throw new l("Unexpected completion request",{request:t})});}setupRootsHandlers(){this.#e.setNotificationHandler(types_js.RootsListChangedNotificationSchema,()=>{this.#e.listRoots().then(t=>{this.#n=t.roots,this.emit("rootsChanged",{roots:t.roots});});});}setupLoggingHandlers(){this.#e.setRequestHandler(types_js.SetLevelRequestSchema,t=>(this.#o=t.params.level,{}));}setupToolHandlers(t){this.#e.setRequestHandler(types_js.ListToolsRequestSchema,async()=>({tools:t.map(e=>({name:e.name,description:e.description,inputSchema:e.parameters?zodToJsonSchema.zodToJsonSchema(e.parameters):void 0}))})),this.#e.setRequestHandler(types_js.CallToolRequestSchema,async e=>{let s=t.find(i=>i.name===e.params.name);if(!s)throw new types_js.McpError(types_js.ErrorCode.MethodNotFound,`Unknown tool: ${e.params.name}`);let n;if(s.parameters){let i=s.parameters.safeParse(e.params.arguments);if(!i.success)throw new types_js.McpError(types_js.ErrorCode.InvalidParams,`Invalid ${e.params.name} parameters`);n=i.data;}let r=e.params?._meta?.progressToken,o;try{let i=async c=>{await this.#e.notification({method:"notifications/progress",params:{...c,progressToken:r}});},m={debug:(c,g)=>{this.#e.sendLoggingMessage({level:"debug",data:{message:c,context:g}});},error:(c,g)=>{this.#e.sendLoggingMessage({level:"error",data:{message:c,context:g}});},info:(c,g)=>{this.#e.sendLoggingMessage({level:"info",data:{message:c,context:g}});},warn:(c,g)=>{this.#e.sendLoggingMessage({level:"warning",data:{message:c,context:g}});}},u=await s.execute(n,{reportProgress:i,log:m,session:this.#l});typeof u=="string"?o=y.parse({content:[{type:"text",text:u}]}):"type"in u?o=y.parse({content:[u]}):o=y.parse(u);}catch(i){return i instanceof R?{content:[{type:"text",text:i.message}],isError:true}:{content:[{type:"text",text:`Error: ${i}`}],isError:true}}return o});}setupResourceHandlers(t){this.#e.setRequestHandler(types_js.ListResourcesRequestSchema,async()=>({resources:t.map(e=>({uri:e.uri,name:e.name,mimeType:e.mimeType}))})),this.#e.setRequestHandler(types_js.ReadResourceRequestSchema,async e=>{if("uri"in e.params){let s=t.find(r=>"uri"in r&&r.uri===e.params.uri);if(!s){for(let r of this.#s){let o=B__default.default(r.uriTemplate),i=o.fromUri(e.params.uri);if(!i)continue;let m=o.fill(i),u=await r.load(i);return {contents:[{uri:m,mimeType:r.mimeType,name:r.name,...u}]}}throw new types_js.McpError(types_js.ErrorCode.MethodNotFound,`Unknown resource: ${e.params.uri}`)}if(!("uri"in s))throw new l("Resource does not support reading");let n;try{n=await s.load();}catch(r){throw new types_js.McpError(types_js.ErrorCode.InternalError,`Error reading resource: ${r}`,{uri:s.uri})}return Array.isArray(n)?{contents:n.map(r=>({uri:s.uri,mimeType:s.mimeType,name:s.name,...r}))}:{contents:[{uri:s.uri,mimeType:s.mimeType,name:s.name,...n}]}}throw new l("Unknown resource request",{request:e})});}setupResourceTemplateHandlers(t){this.#e.setRequestHandler(types_js.ListResourceTemplatesRequestSchema,async()=>({resourceTemplates:t.map(e=>({name:e.name,uriTemplate:e.uriTemplate}))}));}setupPromptHandlers(t){this.#e.setRequestHandler(types_js.ListPromptsRequestSchema,async()=>({prompts:t.map(e=>({name:e.name,description:e.description,arguments:e.arguments,complete:e.complete}))})),this.#e.setRequestHandler(types_js.GetPromptRequestSchema,async e=>{let s=t.find(o=>o.name===e.params.name);if(!s)throw new types_js.McpError(types_js.ErrorCode.MethodNotFound,`Unknown prompt: ${e.params.name}`);let n=e.params.arguments;for(let o of s.arguments??[])if(o.required&&!(n&&o.name in n))throw new types_js.McpError(types_js.ErrorCode.InvalidRequest,`Missing required argument: ${o.name}`);let r;try{r=await s.load(n);}catch(o){throw new types_js.McpError(types_js.ErrorCode.InternalError,`Error loading prompt: ${o}`)}return {description:s.description,messages:[{role:"user",content:{type:"text",text:r}}]}});}},K=events.EventEmitter,w=class extends K{},b=class extends w{constructor(e){super();this.options=e;this.#t=e,this.#e=e.authenticate;}#t;#r=[];#o=[];#i=[];#p=[];#s=null;#n=[];#e;get sessions(){return this.#p}addTool(e){this.#n.push(e);}addResource(e){this.#o.push(e);}addResourceTemplate(e){this.#i.push(e);}addPrompt(e){this.#r.push(e);}async start(e={transportType:"stdio"}){if(e.transportType==="stdio"){let s=new stdio_js.StdioServerTransport,n=new f({name:this.#t.name,version:this.#t.version,tools:this.#n,resources:this.#o,resourcesTemplates:this.#i,prompts:this.#r});await n.connect(s),this.#p.push(n),this.emit("connect",{session:n});}else if(e.transportType==="sse"){let{startSSEServer:s}=await import('mcp-proxy');this.#s=await s({endpoint:e.sse.endpoint,port:e.sse.port,createServer:async r=>{try{let o;return this.#e&&(o=await this.#e(r)),new f({auth:o,name:this.#t.name,version:this.#t.version,tools:this.#n,resources:this.#o,resourcesTemplates:this.#i,prompts:this.#r})}catch(o){throw console.error("Error creating MCP session:",o),o}},onClose:r=>{try{this.emit("disconnect",{session:r});}catch(o){console.error("Error during session disconnect:",o);}},onConnect:async r=>{try{this.#p.push(r),this.emit("connect",{session:r});}catch(o){console.error("Error during session connect:",o);}}});let n=e.sse.host||"localhost";console.info(`server is running on SSE at http://${n}:${e.sse.port}${e.sse.endpoint}`);}else throw new Error("Invalid transport type")}async stop(){this.#s&&this.#s.close();}};
exports.MCP=b;exports.MCPSession=f;exports.UnexpectedStateError=l;exports.UserError=R;exports.imageContent=ne;//# sourceMappingURL=index.cjs.map
//# sourceMappingURL=index.cjs.map